name: 'Setup environment for the build'
description: 'Setup JDK, Gradle, Mingw'
inputs:
  cache-disabled:
    description: 'gradle.cache-disabled'
    default: 'false'
  cache-read-only:
    description: 'gradle.cache-read-only'
    default: 'true'
  submit-dependency-graph:
    description: 'gradle.dependency-graph.generate-and-submit'
    default: 'false'
runs:
  using: 'composite'
  steps:
    # On Windows/Linux runners temurin JDK 8, 11, 17, 21 are cached
    # On macOS arm64 runners temurin JDK 11, 17, 21 are cached; temurin JDK 8 is not available to download
    - uses: actions/setup-java@v4
      with:
        distribution: ${{ (runner.os == 'macOS' && runner.arch == 'ARM64') && 'zulu' || 'temurin' }}
        java-version: 8
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        # the latest listed version will be used for executions of Gradle
        java-version: |
          11
          17
          21

    # Platform specific setup
    - name: "Redirect konan caches to fast D: drive for Windows runners"
      if: runner.os == 'Windows'
      shell: cmd
      run: echo KONAN_DATA_DIR=D:\.konan>>%GITHUB_ENV%
    - name: Install openssl in mingw environment (for openssl shared testing)
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        release: false
        install: mingw-w64-x86_64-openssl
    - name: Use latest Xcode, so that it will have the latest platforms installed and supported
      if: runner.os == 'macOS'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - uses: gradle/actions/setup-gradle@v4
      with:
        build-scan-publish: true
        build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
        build-scan-terms-of-use-agree: "yes"

        cache-disabled: ${{ inputs.cache-disabled }}
        cache-read-only: ${{ inputs.cache-read-only }}

        dependency-graph: ${{ (inputs.submit-dependency-graph == 'true') && 'generate-and-submit' || 'disabled' }}
    - run: ./gradlew commonizeNativeDistribution
      shell: bash
